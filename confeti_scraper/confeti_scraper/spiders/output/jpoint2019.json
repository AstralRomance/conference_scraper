[
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 0, "name": "Get ready, will burn"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/3kckrpoqwbftxj9wouyov7/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/4icAZtdHNb9dyvjEBvWoqQ/4a0413852420a104cc814aad13fa54a5/Anton_Keks_The_World_needs_Full-stack_Craftsmen.pdf"}, {"video": "https://www.youtube.com/watch?v=qd9N9eU1Qn0&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=14"}], "tags": [], "title": "The world needs full-stack craftsmen", "description": ["Developers and IT people in general tend to specialize and become narrowly skilled. In the past there was always the conflict of DB developers vs application developers, or DBA vs developers vs testers. Nowadays developers split even more into front-end/back-end/Android/iOS/whatever else. This leads to inflated teams, inefficient communication, lack of each developer's responsibility, low team's truck factor, and inability to solve production/design problems once and for all instead of applying patches here and there. The term \"full-stack\" is often applied to developers being responsible for all aspects of their work, but XP/craftsmanship practices go further \u2014 we should also take our communication, requirements, operations, testing, etc. under control.", "True \u0441raftsmen can be an order of magnitude more efficient than narrowly skilled developers. They not only write code, but solve problems. Surely you want to be one. Let's break it down and see why it works."], "speakers": [{"name": "Anton Keks", "avatar": "//images.ctfassets.net/oxjq45e8ilak/6FnUGOWjrMfw5lvdZk8AfU/fdf5bbfd4f1092257a7e64d8701d5ac7/Keks.jpg?w=300", "bio": "Anton Keks is a software craftsman, co-founder of Codeborne, the only extreme programming shop in the region, frequent speaker at conferences, and a lecturer in Tallinn Technical University. He is also a strong believer in open source software and agile development methodologies, author of a popular network tool \u2014 Angry IP Scanner, and a regular contributor to other open source projects. ", "contactInfo": {"company": ["Codeborne", "2019"], "twitterUsername": "https://twitter.com/antonkeks"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/6wxij7hz0buprldhj02uwg/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/D9EWZlfwWBvQCir7ImJ4n/fdfaa13087482bbded58e5d5b2588fa7/Yegor_Bugayenko_Software_testing_pitfalls.pdf"}, {"video": "https://www.youtube.com/watch?v=Euz3OVbimkw&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=37"}], "tags": ["yegor256"], "title": "Software testing pitfalls", "description": ["The problem of defining the exit criteria for manual functional testing is well known. Some test teams stop when all test scripts are complete. Others stop when they run out of time or budget. Some stop when the product is visually ready and testers simply can't find anything wrong in it. All of those approaches are wrong. What is the right one? When do we stop and release and how do we know that what we release is good enough for our users?", "At the presentation Yegor will demonstrate a number of existing better methods and will analyze their effectiveness from the practical point of view. He's sure you will reconsider your opinion about testing processes after this presentation."], "speakers": [{"name": "Yegor Bugayenko", "avatar": "//images.ctfassets.net/oxjq45e8ilak/5rdt1qPYk0CQSiQkoge8SA/c7b2dbf79e5fd8e586153e79c1d655bf/Bugayenko.jpg?w=300", "bio": "Yegor Bugayenko is a founder and CEO of Zerocracy, which replaces annoying bosses with AI bots; an OOP fundamentalist; an author of \"Elegant Objects\" book series; a provocative blogger at yegor256.com; a creator of Zold, a non-blockchain cryptocurrency for fast micro-payments; a hands-on Java programmer; a creator of Cactoos, Takes Framework, JCabi, and Rultor; a philanthropist donating four thousand dollars annually to an open source award.", "contactInfo": {"company": ["Zerocracy", "2019"], "twitterUsername": "https://twitter.com/yegor256"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/7m8s8rp8df5oseq1aky6lk/"}, {"video": "https://www.youtube.com/watch?v=MU4wjB5CE-c&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=21"}], "tags": ["projectreactor", "webflux", "\u0434\u0435\u0431\u0430\u0436\u044c\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e"], "title": "Don't be Homer Simpson to your Reactor!", "description": ["Project Reactor is a powerful developer's tool. But the more powerful a tool is, the stricter are the safety regulations. Do you know these regulations?", "In this talk, we'll discuss advanced techniques of working with code on Project Reactor. These techniques will be useful for everybody working with Project Reactor, because, like cockroaches surviving radiation, bugs can survive even in the most thought-out code.", "You've never heard of BlockHound?\n  Or you've heard about backpressure, but aren't sure it works in your code?\n  Maybe you want to prepare your code in advance, in case something goes wrong in production?\n  Or you just want to watch Reactor developers working with their product and learn a couple of cool tricks?\n  Then this talk is for you!"], "speakers": [{"name": "Sergey Egorov", "avatar": "//images.ctfassets.net/oxjq45e8ilak/3msdNYfaMAagzUjHssfbws/6f2e74bfc57d4b263643854df894b11b/Egorov.jpg?w=300", "bio": "Sergei works at Pivotal on Project Reactor in Berlin, Germany.", "contactInfo": {"company": ["Pivotal", "2019"], "twitterUsername": "https://twitter.com/bsideup"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/3s5nqebrevpregacfijhra/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/7pEyob5KPypV7OPOP1xgVR/60a159afa24867006aecec5c8c4668b0/Bernd_Ruecker_Lost_in_transaction_Strategies_to_manage_consistency_in_distributed_systems.pdf"}, {"video": "https://www.youtube.com/watch?v=tBzMLH1K7NU&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=43"}], "tags": ["architecture"], "title": "Lost in transaction? Strategies to manage consistency in distributed systems", "description": ["You probably work on a distributed system. Even if you don't yet face a serverless microservice architecture using fancy NoSQL databases, you might simply call some remote services via REST or SOAP. This leaves you in charge of dealing with consistency yourself. ACID transactions are only available locally within components, and protocols like two-phase commit don't scale. Many projects either risk adventurous inconsistencies or write a lot of code for consistency management in the application layer.", "In this talk Bernd discusses these problems and goes over possible solutions, including the Saga Pattern. He will discuss recipes and frameworks that ease the management of the right level of consistency. This allows you to write business logic code. Expect fun little live hacking sessions with open source components, but also real-life stories."], "speakers": [{"name": "Bernd R\u00fccker", "avatar": "//images.ctfassets.net/oxjq45e8ilak/3vVhBSM5lOzdbXrOwj4opr/1db97b7ed48023c07fa66c7c1a470d83/100363_1373891996_Bernd_Rcker_Lost_in_transaction_Strategies_to_manage_consistency_in_distributed_systems.jpg?w=300", "bio": "Throughout his 15+ years in software development, Bernd has helped automating highly scalable core workflows at global companies including T-Mobile, Lufthansa and Zalando. He has contributed to various open source workflow engines. He is a co-founder and developer advocate of Camunda, an open source software company reinventing workflow automation.", "contactInfo": {"company": ["Camunda", "2019"], "twitterUsername": "https://twitter.com/berndruecker"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/4yidy6xcly4wuiiueegw2c/"}, {"presentation": "https://downloads.ctfassets.net/oxjq45e8ilak/7pcJ1qxvHnXjklgPENeEqw/2739f1ea79259e31961f1b2952d7d532/Kohsuke_Kawaguchi_Pushing_a_big_project_forward_the_Jenkins_story.pdf"}, {"video": "https://www.youtube.com/watch?v=jZyOcrS275U&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=8"}], "tags": ["fatherofjenkins", "jenkinsx"], "title": "Pushing a big project forward: the Jenkins story", "description": ["2018 is an amazing year for Jenkins, because there are many exciting new projects going on in the developer communities \u2014 Jenkins X that's reinventing Kubernetes app development, Configuration as Code that helps you manage configuration as it should be, and more! This followed in 2019 by the launch of the Continuous Delivery Foundation, collaboration with Tekton. In this talk, Kohsuke, the founder of the project and CTO of CloudBees, will walk you through what those projects are aiming for, how they work together to make you even more productive.", "Kohsuke knows Jenkins plays an important role for many Russian developers. But like other users in the rest of the world, most people don't know about these exciting developments, and continue to use Jenkins like they used to do. Kohsuke wants to communicate that Jenkins today is no longer your father's Jenkins."], "speakers": [{"name": "Kohsuke Kawaguchi", "avatar": "//images.ctfassets.net/oxjq45e8ilak/3htfQC6rGJra4dvpamGg1J/288384fb9323eb4a4166aed62966e200/Kawaguchi.jpg?w=300", "bio": "Kohsuke is a well-respected developer and popular speaker at industry and Jenkins community events. He's often asked to speak about his experience and approach in creating Jenkins; a CI platform that has become a widely adopted and successful community-driven open source project. The principles behind the Jenkins community \u2014 extensibility, inclusiveness, low barriers to participation \u2014 have been the keys to its success. Kohsuke's sensibilities in creating Jenkins and his deep understanding of how to translate its capabilities into usable software have also had a major impact on CloudBees' strategy as a company.", "contactInfo": {"company": ["CloudBees", "2019"], "twitterUsername": "https://twitter.com/kohsukekawa"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/2xelfl2d9mgyweeeq60wiw/"}, {"video": "https://www.youtube.com/watch?v=tSVjUKZ8Eg8&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=16"}], "tags": ["rpc", "fullstackreactive", "antigrpc"], "title": "RSocket \u2014 future reactive application protocol", "description": ["Are you doing microservices? Are you frustrated by slow REST? Tired of unreliable gRPC? Do you need faster client-server communication, but don't want to invent your WS-protocol? The answer is RSocket. RSocket is a new application-level protocol with Reactive Streams semantic. It will make your system scalable, fast and resilient. Come and learn why RSocket is the future of cross-services communication. ", "In this session, you will learn why RSocket is an innovative solution for cross-server communication. See how to build a modern multi-player Pac-Man using this amazing technology. The session provides an overview of how we can improve gRPC using RSocket, and why you should start using RSocket today."], "speakers": [{"name": "Oleh Dokuka", "avatar": "//images.ctfassets.net/oxjq45e8ilak/4N8NimCihZPMiISDlJqXEc/29813cdee95937b7adf820ff178cadeb/dokuka.jpg?w=300", "bio": "Mainly Java Software Engineer / Consultant focused on distributed systems development adopting ReactiveManifesto and ReactiveProgramming techniques. Open source geek, the active contributor of ProjectReactor. Along with that, public speaker and author of the book ", "contactInfo": {"company": ["Netifi, Inc", "2019"], "twitterUsername": "https://twitter.com/OlehDokuka"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 3, "name": "Hardcore. Really hard and demanding talk, you'll understand only if you're an experienced engineer."}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/6nb9luhmk57yk9hmblzoc1/"}, {"video": "https://www.youtube.com/watch?v=innd9Croh2k&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=15"}], "tags": ["eclipseomr", "diy", "compilerconstruction"], "title": "Create your own interpreter with a JIT in 1 hour", "description": ["During this talk Charlie will describe how you can use Eclipse OMR technologies to easily create an interpreter for a new or existing runtime and get a JIT for free! He will walk through the simple steps to create a small, efficient interpreter and JIT using the new OMR InterpreterBuilder for any runtime. One of the major benefits is that once the interpreter is written the exact same code is used to create a JIT for the runtime. This means there is only 1 place to modify code. Everyone understands the benefit of having a JIT so getting one for free is a huge advantage. By the end of the talk you will have successfully implemented a simple interpreter and JIT using the InterpreterBuilder and compared the performance with an interpreter written in C++. Runtime and language enthusiasts should definitely check out the OMR project to see how it can help.", "The OMR project is a set of open source C and C++ components that can be used to build robust language runtimes that support many different hardware and operating system platforms. One key feature of the OMR project is that it can be used to improve an existing runtime for languages with mature communities without forcing the communities to switch from their favourite runtime."], "speakers": [{"name": "Charlie Gracie", "avatar": "//images.ctfassets.net/oxjq45e8ilak/145s7kAPg3XwKJN3gRWoPP/18de3bc7f4be1d409f373350925bdfdc/Gracie.jpg?w=300", "bio": "Charlie Gracie is currently working at IBM as the Garbage Collection Architect on the Eclipse OpenJ9 and Eclipse OMR projects. He has more than a decade of JVM development experience with a focus on memory management and garbage collection. Recently, his focus has been on community growth for the OpenJ9 and OMR projects.", "contactInfo": {"company": ["IBM", "2019"], "twitterUsername": "https://twitter.com/crgracie"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/35hks9g6etavlgijj8nfvh/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/QfKLUrP7s2F5SyE4ZPFMt/e9b041f39fef5f74c1233c9e8a1354b8/Dmitriy_Chuyko_Ne_kladi_vse_yaytsa_v_odin_konteyner.pdf"}, {"video": "https://www.youtube.com/watch?v=5iGqzc3p5Fo&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=18"}], "tags": ["hotspot", "docker", "spring", "appcds", "aot", "performance"], "title": "Don't put all your eggs in one container", "description": ["Containers are so good to run microservices. Even inexpensive cloud instance can run many nowadays. But why your services don't start, work slow and die in silence? Proper diagnostic tools and newer Java clarify and vanquish that.", "Microservice architecture and containerization have become the standards of modern application development. The challenges that developers face today are different from the problems that we used to solve earlier. Creators of the Java runtime respond to this with the appropriate functionality in the JDK. For example, an inexpensive cloud instance can be quite powerful. And it runs a bunch of containers. Then JVMs running in different containers compete for instance resources. Starting from Java 10, virtual machines know how to live in peace, this work has continued in Java 11.", "On the other hand, you now need to choose which base image to use. This includes the choice of operating system and Java runtime. OS images vary greatly in size and have their own characteristics, which must be taken into account. Java runtime is also for every taste now. And even within the OpenJDK framework, assemblies from different companies are available with different functionality and size. And you can create a custom runtime image.", "We will consider the practical application of Java 11 functionality in a container environment typical for popular frameworks."], "speakers": [{"name": "Dmitry Chuyko", "avatar": "//images.ctfassets.net/oxjq45e8ilak/3Q58EiMGydnejbUmCX8KGT/83ab78a8f2fc11eb8030550ebfc246d3/100384_1506810502_Dmitriy_Chuyko_Ne_kladi_vse_yaytsa_v_odin_konteyner.jpg?w=300", "bio": "Dmitry Chuyko is a performance engineer at BellSoft, which is among the top 5 contributors to OpenJDK. Before joining BellSoft, Dmitry programmed in Java, and then worked on Hotspot JVM in Oracle. After all, previous experience with Java has shown that the most interesting problems in applications get their solutions in the base platform. Currently Dmitry mostly optimizes OpenJDK for ARM64, the company even implemented its own JEP 315 on Java 11 on this topic.", "contactInfo": {"company": ["BellSoft", "2019"], "twitterUsername": "https://twitter.com/dchuyko"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/35kmzgw4ds3gyt849hbaeo/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/5gMfehJOSXbGNPzqLzmcQJ/37238e5055ae3ea800020c5afe2eb5e7/Simon_Ritter_JDK_12_Pitfalls_for_the_unwary.pdf"}, {"video": "https://www.youtube.com/watch?v=XHnrOKxaEag&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=7"}], "tags": ["news", "java12", "java"], "title": "JDK 12: Pitfalls for the unwary", "description": ["Four releases of Java in less than 18 months!  A big change to how Java is delivered, but it's not the only one. JDK 9 introduced a significant change in the form of the module system that can impact how easy it is to run existing applications. JDK 9 also started a long overdue cleanup of the JDK, removing features as well as adding them. This has continued in JDK 10, JDK 11 and JDK 12.", "In this session, we'll look at all the areas of JDK 9, 10, 11 and 12 that may impact application migration. This will cover all aspects: Java language syntax, class libraries and JVM options (a significant number of which have changed in these releases).", "We'll also look at how the new JDK release cadence will impact Java support and the choices of which Java versions to use in production."], "speakers": [{"name": "Simon Ritter", "avatar": "//images.ctfassets.net/oxjq45e8ilak/4BEQmsXal7tBTgb3tj4PvN/e0fabff253d70b9b24f53f550ab42671/Ritter.jpg?w=300", "bio": "Simon Ritter is the Deputy CTO of Azul Systems. He has been in the IT business since 1984 and holds a Bachelor of Science degree in Physics from Brunel University in the U.K. ", "contactInfo": {"company": ["Azul Systems", "2019"], "twitterUsername": "https://twitter.com/speakjava"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/57wq8ab5ytwmw7pdjvxcjd/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/4fW3C6ZLDNjSJ0upqVEDRD/7e57ad1ba4872cdaccf8739f9d283a9d/Tomasz_Nurkiewicz_Reactive_programming_lessons_learned.pdf"}, {"video": "https://www.youtube.com/watch?v=z0a0N9OgaAA&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=42"}], "tags": ["reactive", "youarenotnetflix"], "title": "Reactive programming: lessons learned", "description": ["Reactive programming enables amazing things. Highly scalable systems consuming just a fraction of CPU compared to ordinary applications? Sure. Responsive, low latency and high throughput? No problem. Small memory and OS footprint? Out-of-the-box. Any reason not to love reactive?", "Tomasz will share some of his experiences with reactive programming and systems. Where it shines and where it was an over-engineering. What are the hidden costs and common mistakes. How to convince your teammates to start the reactive journey. And, more importantly, how to convince your teammates that going reactive is a dead end. On a case-by-case basis."], "speakers": [{"name": "Tomasz Nurkiewicz", "avatar": "//images.ctfassets.net/oxjq45e8ilak/1qMHdv0sepOqNv5I19PUPh/80e9a622ebdea2e16b8baf06701320fb/Nurkiewicz.jpg?w=300", "bio": "Java Champion. Spent half of his life on programming, for the last decade professionally in Java land. Loves back-end and data visualization. Passionate about alternative JVM languages. Disappointed with the quality of software written these days (so often by himself!), hates long methods and hidden side effects. Interested in charting, data analysis and reactive programming. Believes that computers were invented so that developers can automate boring and repetitive tasks. Also their own.", "contactInfo": {"company": ["Allegro", "2019"], "twitterUsername": "https://twitter.com/tnurkiewicz"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/2w2eubjglmank7bdaurtlk/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/2EudqMhEHVN7a08UmfPh6m/3ef524b503d0e30facd923a34807b7c8/Victor_Rentea_The_Proxy_fairy_and_the_magic_of_Spring.pdf"}, {"video": "https://www.youtube.com/watch?v=HbbvyZh3IZo&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=17"}], "tags": ["springinternals", "underthehood"], "title": "The Proxy fairy and the magic of Spring", "description": ["You can only claim you know Spring if you fully understand the Proxy design pattern, and how the framework uses it to do its magic. Join this live-coding session to explore 6 ways of intercepting method calls that you can use to cast your own spells and dramatically simplify your codebase.", "Grab a strong coffee and prepare yourself for a whirlwind of ", ", interwoven with ", " that you ", " to master if you are using the Spring Framework. During this session, Victor will share one of the best parts of his Design Patterns training, applied to Spring. You'll hear about the Decorator pattern plus 2 ways to wire it with Spring, bare-hands interface proxies, concrete classes proxies, @Aspect applied to custom annotations, plus some of the most common standard off-the-shelf Spring aspects. Come and learn from a hands-on practitioner real-world best practices of using Aspects, design hints, under-the-hood implementation details, debugging tips, performance impact of aspects, all in an interactive, entertaining and extremely dynamic session."], "speakers": [{"name": "Victor Rentea", "avatar": "//images.ctfassets.net/oxjq45e8ilak/4f07RcoJKMiSsE8c24sG6S/cfee49ba81f928b2430217640d9a9145/victor_rent.jpg?w=300", "bio": "Sr. Architect, Developer and Technical Lead at IBM, for major client. Independent Trainer and Coach. Faculty Lecturer (\"Design Patterns\"). PhD(CS).", "contactInfo": {"company": ["Independent Trainer", "2019"], "twitterUsername": "https://twitter.com/victorrentea"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 3, "name": "Hardcore. Really hard and demanding talk, you'll understand only if you're an experienced engineer."}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/1emn9byzaklzozk6ec56dp/"}, {"presentation": "https://downloads.ctfassets.net/oxjq45e8ilak/1ehPtP6ZgJAqp6Ob040mRW/0f4fa47c439e9d888b2e53aa0ca21d8d/Nikita_Lipskiy_Nas_Spring_Boot_a_my_krepchayem_nevynosimaya_legkost_AOT-kompilyatsii_Spring-prilozheniy.pdf"}, {"video": "https://www.youtube.com/watch?v=wUu2gVtNt1s&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=2"}], "tags": ["springboot.exe", "reflection", "classloaders", "startup", "jvm"], "title": "Spring comes ahead of time, or Unbearable lightness of AOT compilation of the Spring Boot applications", "description": ["It appears that Spring Framework uses nearly all the Java dynamic features: Spring Boot applications are being loaded by their own classloader, Java bytecode on the fly generation and loading, reflection are being used everywhere, etc.", "On the other hand, static AOT compilation of the Java applications is gaining popularity in the world of microservices. It can solve problems of fast start up, predictable performance and instant peak performance achievement. One wonders whether the dynamic of Spring Framework can coexist with static compilation? The answer is yes, it can.", "In this talk Nikita, using Spring Boot support in AOT-centric JVM Excelsior JET as an example, will show how Java dynamic features used in Spring Framework can work together with AOT-generated machine code."], "speakers": [{"name": "Nikita Lipsky", "avatar": "//images.ctfassets.net/oxjq45e8ilak/5tppmFH2IvmR9rdrRPRiRI/1d9f3f0a2259f809b0fda4b212c23633/100315_675550711_Nikita_Lipskiy_Nas_Spring_Boot__a_my_krepchayem__nevynosimaya_legkost_AOT-kompilyatsii_Spring-prilozheniy.png?w=300", "bio": "Nikita is an initiator and a product lead of Excelsior JET project \u2014 complete Java SE implementation (JVM) with AOT compiler developed by Excelsior LLC. Working on the project since 1997 he took part in almost every activity of the project from the JVM core to product management and support. In particular, he is the author of OSGi support at the JVM level, Java Runtime Slim-Down technology (Java SE modularization implemented in Excelsior JET since 2007), both Java bytecode verifiers, Spring Boot support and many others.", "contactInfo": {"company": ["Excelsior", "2019"], "twitterUsername": "https://twitter.com/pjBooms"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/2c60tzkmodppzi1ggvvoum/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/4NFFkGajOXoZK5yzEpdEgc/50c97bf03093aab061bf0582b697dcf7/Allard_Buijze_Performance_aspects_of_Axon-based_CQRSES_systems.pdf"}, {"video": "https://www.youtube.com/watch?v=U6s3D8GoHaw&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=20"}], "tags": ["fatherofaxon", "cqrsinproduction", "productionreality"], "title": "Performance aspects of Axon-based CQRS/ES systems", "description": ["Axon Framework is a well-established open source framework for writing CQRS, event-sourcing (ES) and DDD-based applications in Java. It has been around for eight years and is used in business applications around the globe, with the financial services industry proving to be a sweet spot.", "In October 2018 Axon 4 has been released. Starting from this release, Axon is a platform consisting of the open source Axon Framework and the open source Axon Server. The platform offers an unique, scalable way to build microservices. It allows developers to focus on functionality, with things like the correct routing of messages being handled by the platform.", "In this session, we'll zoom into a specific aspect of Axon-based CQRS/ES systems: performance. While CQRS/ES is often touted as a great performance booster (through query simplification and eventual consistency), in reality, there are some challenges. Large event stores, or individual aggregates with large numbers of events, may show horrible performance. Also, replaying the event stream into a new read model sounds easy in principle, but becomes challenging when talking about billions of past events.", "This session will begin with a fast-paced review of the core CQRS/ES principles and their implementation in Axon. After that, we'll focus on the various performance challenges and approaches to solving them."], "speakers": [{"name": "Allard Buijze", "avatar": "//images.ctfassets.net/oxjq45e8ilak/50gs0xp51EV70XMlW84vKl/20bb397401c1a3a4db1728f1480f8b20/Buijze.jpg?w=300", "bio": "Allard Buijze is founder and CTO of AxonIQ. Starting at the age of 6, he has developed a great passion for programming and has guided both large and small organizations in building performant and scalable applications. Now, he is on a mission to make implementations of large scale systems easier, using the concepts of Domain-Driven Design, Command-Query Responsiblity Segregation and Event-Driven Architectures. He created Axon Framework as an experiment initially, but when both large and small organizations started using Axon as a solution to their complexity problems, AxonIQ was born.", "contactInfo": {"company": ["AxonIQ", "2019"], "twitterUsername": "https://twitter.com/allardbz"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 3, "name": "Hardcore. Really hard and demanding talk, you'll understand only if you're an experienced engineer."}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/5gauo6aka50au7apearcds/"}], "tags": ["vm/runtime", "compilergeneration"], "title": "Maximizing performance with GraalVM (talk + workshop)", "description": ["This talk will discuss best practices for Java code shapes and compiler configurations to maximize performance with GraalVM and how to measure performance in a reliable manner. We will talk about how to achieve minimal memory footprint and binary size of GraalVM native images \u2014 programs compiled ahead of time to native executables. A comparison of profile-guided optimizations for ahead-of-time compilation and just-in-time compilation will show the benefits and drawbacks of the two approaches.", "In this workshop, participants will learn about the main benefits of GraalVM by running example programs on their laptops. First, we will cover how to improve peak performance for JVM-based applications. Then, we will create a native image for fast startup and low footprint. Finally, participants will create a multilingual application with interoperability between multiple languages including Java and JavaScript.", "You will learn first-hand how the versatility of GraalVM allows running your code in the best suitable mode maximising performance or minimizing footprint."], "speakers": [{"name": "Thomas Wuerthinger", "avatar": "//images.ctfassets.net/oxjq45e8ilak/63PyLQzbTK8nrtfc25wBdB/57e784282c261bf39f20a57a85e1519c/Wuerthinger.jpg?w=300", "bio": "Thomas Wuerthinger is a Senior Research Director at Oracle Labs leading programming language implementation teams for languages including Java, JavaScript, Ruby, and R. He is the architect of the GraalVM compiler and the Truffle self-optimizing runtime system. Previously, he worked on the Crankshaft optimizing compiler of V8 at Google, and the Maxine research virtual machine at Sun Microsystems. He received a PhD degree from JKU Linz for his research about dynamic code evolution.", "contactInfo": {"company": ["Oracle", "2019"], "twitterUsername": "https://twitter.com/thomaswue"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 3, "name": "Hardcore. Really hard and demanding talk, you'll understand only if you're an experienced engineer."}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/6tqzgwcm9atqfq4nkazsd9/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/3tNNExRPdCUTs1119aKdRa/a79f0b8cf47625af70863e2d14a3840a/Nikita_Koval_Channels_in_Kotlin_Coroutines.pdf"}, {"video": "https://www.youtube.com/watch?v=cdpQMDgQP8Y&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=36"}], "tags": ["concurrency", "algorithms"], "title": "A tale of how we did channel algorithm in Kotlin Coroutines", "description": ["Most programming languages are introducing mechanics of asynchronous programming. Kotlin, for its part, implemented coroutines which use channels to connect with each other. Therefore, high-load applications depend on performance of those channels, which need to be implemented in an effective and scalable way. ", "In this talk, we'll discuss which channel algorithms other programming languages and libraries use, how we in Kotlin develop our own solution, which challenges and subtle aspects we encounter in the process and what we managed to achieve."], "speakers": [{"name": "Nikita Koval", "avatar": "//images.ctfassets.net/oxjq45e8ilak/aTaskbR84ws88SUm8IyuO/8dbf4f1e7bde73f8f463c158a6f66021/Koval.jpg?w=300", "bio": "Nikita works on algorithms for coroutines in the Kotlin team and has been getting a PhD at IST Austria. In addition, he teaches a course on concurrency programming at ITMO University and is interested in program analysis and verification.", "contactInfo": {"company": ["JetBrains", "2019"], "twitterUsername": "https://twitter.com/nkoval_"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/c5srr3uywos62ewokgii0/"}, {"repo": "https://github.com/sdaschner/coffee/tree/jpoint-2019/presentation"}, {"video": "https://www.youtube.com/watch?v=fvUlEfVXu5s&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=1&t=0s"}], "tags": ["microprofile", "jee", "resilience"], "title": "Bulletproof Java Enterprise applications for the hard production life", "description": ["It's one thing to develop Java Enterprise applications, to execute and validate them in test environments. Running the application in production, however, is a whole other story. Production life is harsh, unforgivable and the ultimate verification whether your application is able to add value to its users. Besides knowing the Java Enterprise APIs, developers therefore also need to know how to meet production requirements.", "This session shows which non-functional requirements we enterprise developers need to be aware of to build stable and resilient applications. We will see different resiliency approaches, such as circuit breakers, bulkheads, or backpressure, in action. We will implement these concepts using the Java Enterprise API, MicroProfile, and certain Java EE extensions. Furthermore, we will see how especially service meshes enable us to add resiliency to multiple microservices in a transparent, redundancy-free fashion.", "Adding telemetry to our applications is crucial to gather insights about the application under production load. We will see how to enhance our microservices with concerns such as monitoring, tracing, or logging in a minimalistic way."], "speakers": [{"name": "Sebastian Daschner", "avatar": "//images.ctfassets.net/oxjq45e8ilak/6wRrAEdnpa8sraY3OQYzfu/9f2f8a025f32a9442d4c6424203ce447/Daschner.jpg?w=300", "bio": "Sebastian Daschner is a Lead Java Developer Advocate for IBM, author, and trainer and is enthusiastic about programming and Java (EE). He is the author of the book \"Architecting Modern Java EE Applications\". Sebastian is participating in the JCP, helping to form the future standards of Java EE, serving in the JAX-RS, JSON-P and Config Expert Groups and collaborating on various open source projects. For his contributions in the Java community and ecosystem, he was recognized as a Java Champion, Oracle Developer Champion and JavaOne Rockstar.", "contactInfo": {"company": ["IBM", "2019"], "twitterUsername": "https://twitter.com/DaschnerS"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/3ezm0sz0u4piyqtzw5cipb/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/1piWdJ4vv8CQG7GG3TeGuZ/66f037870e9984d1055755031d2d5061/Aleksandr_Nozdrin-Plotnitskiy_Java_microservices_from_Netflix_OSS_to_Kubernetes.pdf"}, {"video": "https://www.youtube.com/watch?v=GjH42hBYVJQ&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=41"}], "tags": ["\u0433\u0440\u0430\u0431\u043b\u0438", "architecture", "spring"], "title": "Java microservices: from Netflix OSS to Kubernetes", "description": ["We'll share our company's experience of building systems based on microservice architecture. We'll tell how we were using Spring Boot + Netflix OSS stack (Eureka, Feign, Ribbon, Hystix, Zuul) and building Zero Downtime Deployment with use of Spinnaker (AWS as infrastructure), what every Netflix OSS stack element was used for, its benefits and drawbacks, and problems we encountered in production.", "Then we'll tell why we switched to Kubernetes, how it allowed us to solve the same problems as Netflix OSS stack, but faster. We'll draw analogies between Netflix OSS and Kubernetes elements (for example, Eureka \u2014 Kubernetes Service API, Zuul \u2014 Kubernetes Ingress API, etc.). We'll cover our experience of building CI/CD with Zero Downtime Deployment, using Kubernetes and Helm (Kubernetes package manager).", "This talk's aimed at seniors, leads, and architects who are currently migrating or considering migration from Netflix OSS to Kubernetes platform for solutions based on microservice architecture."], "speakers": [{"name": "Aliaksandr Nozdryn-Platnitski", "avatar": "//images.ctfassets.net/oxjq45e8ilak/StwnVPUvqylzFtVOxByEV/444a879437c7fbb1702387284f930379/Nozdryn-Platnitski.jpg?w=300", "bio": "Aliaksandr is a Lead Java developer in Godel Technologies. He has been developing commercial products for over 12 years. He went all the way from Junior Java developer to Technical Architect on projects for international corporations. Appreciates simple and elegant solutions. He is a huge fan of the philosophy of distributed systems and Spring stack. Aliaksandr has been introducing DevOps philosophy to all the projects lately.", "contactInfo": {"company": ["Godel Technologies", "2019"], "twitterUsername": null}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/6fhvshh187ayscc7ahpeju/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/7iPAlQJ6u7F4lgfNmXvEYu/26b7a76b97bafbe3b834e44c130d12ef/Milen_Dyankov_Decomposing_Java_applications.pdf"}, {"video": "https://www.youtube.com/watch?v=HL70ymW6GpM&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=11"}], "tags": ["architecture", "bestpractices", "modularity"], "title": "Decomposing Java applications", "description": ["Most Java developers happily use libraries in their applications. Many developers split their own code into what they call modules hoping that brings benefits. Yet way too often they end up having a (distributed?) big ball of mud sooner or later? This session aim to answer the question: why simply cutting things down into smaller pieces and calling them libraries, modules, microservices, ... does not work?", "In this talk we'll go one abstraction level above and look at the process of decomposing a Java application into reusable components. We'll examine different ways to organize Java code in methods, classes, packages and modules. We'll talk about APIs, SPIs, hiding implementation details and enforcing module boundaries. Some of you will be surprised how well SOLID principles fits into the picture. But most important of all, we'll end up with application design that has good chance to evolve over the years without introducing additional accidental complexity."], "speakers": [{"name": "Milen Dyankov", "avatar": "//images.ctfassets.net/oxjq45e8ilak/45UxeLJXwW8wOP0UNn75cF/bc799cd4191ce2a45c41ddef7aec537e/Dyankov.jpg?w=300", "bio": "Milen is a Developer Advocate at Liferay and focuses on Java and OSGi Platform. He is passionate about designing and building software as well as helping others design and build good software! After more than 15 years developing, designing and consulting on various Java EE solutions for leading European companies, he currently spends most of his time teaching, speaking at conferences all over the world and researching his favorite topics around Java modularity, systems architecture and software craftsmanship.", "contactInfo": {"company": ["Liferay", "2019"], "twitterUsername": "https://twitter.com/milendyankov"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/5n8sgmrj64io2nbdhwwefd/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/Q613ahgpNsXzrWsdUcnzH/84c55d33e4d349427d219d41780f3fde/Bruno_Borges_Making_sense_out_of_serverless_computing.pdf"}, {"video": "https://www.youtube.com/watch?v=UCJe9k2zqo0&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=33"}], "tags": ["serverless", "cloud"], "title": "Making sense out of serverless computing", "description": ["\"Serverless\" can have different meanings. But regardless of what anyone says, one thing is clear: there are many servers behind it! The goal of this presentation will be to understand when, how, and why to adopt serverless technologies. To do that, we will observe the three pillars of serverless: event-driven, micro-billing, and self-scaling abstract infrastructure, and on top of that we will look into the expected developer experience and how it will positively impact developers' productivity. Lastly, let's take a look at some architectural patterns that can help you initially adopt the technology for brand new projects as well as into existing systems."], "speakers": [{"name": "Bruno Borges", "avatar": "//images.ctfassets.net/oxjq45e8ilak/1PifejIIWaoDT7MvtaTgvA/3335210cd1ea6357730cbcf29757115c/Borges.jpg?w=300", "bio": "Bruno Borges has over 18 years of experience as a software developer. Frequent conference speaker, now developer advocate for Java at Microsoft. Before, between 2012/2017 was Oracle's Principal Product Manager responsible for Developer Relations and Engagement Strategy for Oracle Cloud, Fusion Middleware, Java, and related technologies for application development. You can find him on Twitter @brunoborges.", "contactInfo": {"company": ["Microsoft", "2019"], "twitterUsername": "https://twitter.com/brunoborges"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/31lsatiyrmg0ykfjbdppmg/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/jiciLWszfOFz330KO8GMA/f51e15632acd3a172ee7636900cd20b0/Andrzej_Grzesik_What_do_I_do_with_1000s_cores_Lessons_learnt_building_an_agent-based_modelling_system.pdf"}, {"video": "https://www.youtube.com/watch?v=PW0ZVhtudJc&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=31"}], "tags": ["architecture", "bestpractices"], "title": "What do I do with 1000s cores. Lessons learnt building an agent-based modelling system", "description": ["Supercomputer-worthy core counts and memory sizes are more approachable than ever.", "\"What can it do\" is the obvious question to ask. Simulation, especially based around agents, is one of the possible answers.", "Andrzej will talk about agent based modelling, from the point of view of a developer building the framework, focusing on some interesting, non-trivial or plain old surprising experiences he's getting building a JVM-based agent-based modelling SDK at Simudyne. He will talk performance, distributed systems, multithreading and SDK design. "], "speakers": [{"name": "Andrzej Grzesik", "avatar": "//images.ctfassets.net/oxjq45e8ilak/6QSIXqO6LoW7RSXgM1xFPS/3be098a90812d5388d93b8c0ee2b3fb9/Grzesik.jpg?w=300", "bio": "Andrzej likes distributed systems in all shapes and forms. Coding since the age of 8, loves simplicity and continuous delivery. While he has written in many languages, he favours the JVM. Since \"most software problems are people problems\", he stirs communities, organizes and speaks at conferences (proud to be a JavaONE Rockstar!). He is passionate about all things data, because science! In his spare time\u2026 cycling, photography and books. And he is a Java Champion!", "contactInfo": {"company": ["Simudyne", "2019"], "twitterUsername": "https://twitter.com/ags313"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/65s92phtqgiszcypsnbao7/"}, {"video": "https://www.youtube.com/watch?v=IWaokOC0ZBw&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=32"}], "tags": ["scala"], "title": "Seamless web services development with Mu", "description": ["In fast-paced service-oriented systems development it is not uncommon for major requirements changes to emerge. Things that were meant to be cemented like protocols, transports, and encodings may need to be altered e.g. due to the organization switching to a new tech stack.", "Oli introduces Mu, a new FP library for building web services aiming to make such changes painless.", "Mu offers code annotations to define RPC or REST APIs, message types, serialization formats, thus removing dependency on protocol-specific declarations and enabling seamless changes between different implementations.", "Required knowledge: Scala syntax, basic understanding of RPC, REST. Knowing Tagless Final encoding would help, however, it's not a requirement."], "speakers": [{"name": "Oli Makhasoeva", "avatar": "//images.ctfassets.net/oxjq45e8ilak/6mcZCYVT9iw2fp8KVG0M0i/eecff3eadb6249e39f4529287a63d338/Makhasoeva.jpg?w=300", "bio": "Oli is a Scala Software Engineer specializing in developing high-load backend platforms. Recently, she shifted gears and joined 47 Degrees as a Solutions Architect where she is working on a variety of different projects focused on improving client experience with Scala and Functional Programming (FP). She is the founder and co-organizer of the popular FP meetup, Fun(c) that draws tech experts from around the world for speaking engagements. She also hosts two podcasts about Scala: ScalaLove and Scalalaz.", "contactInfo": {"company": ["47 Degrees", "2019"], "twitterUsername": "https://twitter.com/Oli_kitty"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/2in98le4dnvolaesvg9nwy/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/6MHdOq4hjbsJ5tUOKuF5b4/a0f37919a455bb979706fc3232de6450/Dmitriy_Govorukhin_Effektivnaya_rabota_s_faylami_dlya_Java-razrabotchikov.pdf"}, {"video": "https://www.youtube.com/watch?v=7GlMS630dt8&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=13"}], "tags": ["filechannel", "performance", "gotchas", "osmakesbetter"], "title": "Efficient file-based IO for Java developers", "description": ["Dmitriy will share with you his personal experience of developing disk intensive applications and the peculiarities noticed during the development of Apache Ignite Native Persistence Store:", "This talk is aimed at experienced developers who need maximum performance when working with the disk."], "speakers": [{"name": "Dmitriy Govorukhin", "avatar": "//images.ctfassets.net/oxjq45e8ilak/3DqNBuw34p5yg9zyEqdvMF/ce75ad2732be176cf2c2db1edc81b322/Govorukhin.jpg?w=300", "bio": "Group Leader / Lead Developer at GridGain.", "contactInfo": {"company": ["GridGain", "2019"], "twitterUsername": null}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/2hsfk1cviekoje6pse6wfy/"}, {"video": "https://www.youtube.com/watch?v=eq5a--MZKtM&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=39"}], "tags": ["debugging", "structuralsearch", "inspections"], "title": "How to unravel the tangle: Analyzing and debugging apps in IntelliJ IDEA", "description": ["So we download source code, open the project in IDE, and... what? Where? How does it even work?! IDEA helps us not only write code, but also understand it. Here we've got a whole set of wonderful tools that make working with legacy code much more easier.", "In this talk, we'll discuss three main topics:"], "speakers": [{"name": "Anton Arhipov", "avatar": "//images.ctfassets.net/oxjq45e8ilak/5P1Kd3hcFVE3HEXjH1yduN/9eb021a69c50918371b92e5be39467a4/Arhipov.jpg?w=300", "bio": "Anton is a Developer Advocate at JetBrains. Working with TeamCity and IntelliJ IDEA. Programming in Java and Kotlin. Professional interests include programming languages, middleware, and developer tooling.", "contactInfo": {"company": ["JetBrains", "2019"], "twitterUsername": "https://twitter.com/antonarhipov"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/79c6yjo0q4q4esyosgeyoo/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/4EFaeFr4kZTjgJF2d3IvRW/9f8b66c722e62386ceb6316bee23473e/Rafael_Winterhalter_The_definite_guide_to_Java_agents.pdf"}, {"video": "https://www.youtube.com/watch?v=OF3YFGZcQkg&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=30"}], "tags": ["fatherofbytebuddy", "bytecode", "bytebuddy", "firsthand"], "title": "The definite guide to Java agents", "description": ["Java agents and their instrumentation API offer developers the most powerful toolset to interact with a Java application. Using this API, it becomes possible to alter the code of running applications, for example, to add monitoring or to inject security checks as it is done by many enterprise products for the Java ecosystem.", "In this session, developers will, however, learn how to program agents using Byte Buddy, a high level code generation library that does not require any knowledge of Java bytecode. Doing so, developers will see how Java classes can be used as templates for implementing highly performant code changes that avoid the boilerplate of alternative solutions such as AspectJ or Javassist while still performing better than agents implemented in low-level libraries such as ASM."], "speakers": [{"name": "Rafael Winterhalter", "avatar": "//images.ctfassets.net/oxjq45e8ilak/1n0FtBuMco0E8gWIkSWG8s/267caffdb56e47da75914a6e53a0e2b4/Rafael_Winterhalter.jpeg?w=300", "bio": "Rafael works as a software consultant in Oslo, Norway. He is a proponent of static typing and a JVM enthusiast with particular interest in code instrumentation, concurrency and functional programming. Rafael blogs about software development, regularly presents at conferences and was pronounced a JavaOne Rock Star. When coding outside of his workplace, he contributes to a wide range of open source projects and often works on Byte Buddy, a library for simple runtime code generation for the Java virtual machine. For his work, Rafael received a Duke's Choice award and was elected a Java Champion.", "contactInfo": {"company": ["Scienta AS", "2019"], "twitterUsername": "https://twitter.com/rafaelcodes"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/7znymtf6xz2aodcf4ahjun/"}, {"video": "https://www.youtube.com/watch?v=Q87qG7Mee90&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=29"}], "tags": ["jit", "performance", "\u043e\u043d\u043e\u0441\u0430\u043c\u043e\u0441\u043b\u043e\u043c\u0430\u043b\u043e\u0441\u044c"], "title": "Java is slow: CodeCache edition", "description": ["It has never been like this and now it is exactly the same again: production crashes! Or just runs slow.", "\"Did you change anything?\"", "\"No, we didn't\".", "\"Did it function properly before?\"", "\"Yes, it did\".", "How we're supposed to analyse this?", "And if we got cluster and the second node generally runs slower than the rest?", "Experience has shown that JIT compiler is to blame for everything (just joking). But JIT compiler could actually do its job in a different manner, and your application would run slow after a simple reboot.", "In this talk, we'll discuss how to manage JIT compiler's actions and how to analyse cases when something goes wrong (obtain core dumps, write patches with OpenJDK, etc.)."], "speakers": [{"name": "Vladimir Sitnikov", "avatar": "//images.ctfassets.net/oxjq45e8ilak/5mzA6ao6QF4MnwWTdLdu55/7bf2f4e0c1ebe2ef4e5d7b5f9df6e389/Sitnikov.jpg?w=300", "bio": "Vladimir has been working on performance and scalability of NetCracker platform (a software used by telecom operators for automatization of network management processes and network equipment) for ten years. His focus is Java and Oracle Database performance optimisations. Vladimir is an author of more than a dozen of performance improvements in the official PostgreSQL JDBC driver.", "contactInfo": {"company": ["Netcracker", "2019"], "twitterUsername": "https://twitter.com/VladimirSitnikv"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/34lpctludo6qawi0i66wqm/"}, {"video": "https://www.youtube.com/watch?v=E-kkrMy7Ik8&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=12"}], "tags": ["eclipsecollections"], "title": "Do it yourself: Collections", "description": ["Collections are one of the basic building blocks while writing code. Frequently used collections like List, Set, Map are designed to serve a fundamental purpose. However, sometimes these collections are not enough and developers will extend these to add new functionality. In this talk, we will extend the Map data structure to create two new collections called Bag (or MultiSet) and Multimap (or MultiValuedMap). But is the job considered complete by just extending a collection? Oftentimes it is not enough.", "The talk will walk the audience through the basics of creating a new collection, adding new collection-specific API, the salient aspects of the new collection, lastly, the various knobs and controls which are required to make it safe and usable."], "speakers": [{"name": "Nikhil Nanivadekar", "avatar": "//images.ctfassets.net/oxjq45e8ilak/5gLHNlxGFbCiZh6UwyITqi/e8dd41f6e4259c6bc6ed2f2b9973f576/Nanivadekar.jpg?w=300", "bio": "Nikhil graduated in 2012 from University of Utah with a Masters in Mechanical Engineering with specialization in Robotics and Controls. He is the project lead for Eclipse Collections and has presented at JavaOne, DevoxxUS, Great Indian Developer Summit and Java User Group meetups. He is passionate about robotics and has conducted robotics workshops at JCrete4Kids, JavaOne4Kids and Devoxx4Kids. In 2017, Nikhil was named an Oracle Developer Champion.", "contactInfo": {"company": ["Independent", "2019"], "twitterUsername": "https://twitter.com/NikhilNanivade"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/6kyixr30fgfmedztyom628/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/4YJwPsTIYjaBYsfZjZdsu6/77167737917f94faa9e2ed370f421063/Vladimir_Plizga_Perevod_Spring_Boot-mikroservisov_s_Java_8_na_11_chto_mozhet_poyti_ne_tak.pdf"}, {"video": "https://www.youtube.com/watch?v=fmLW7VkSuN8&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=6"}], "tags": ["\u0433\u0440\u0430\u0431\u043b\u0438", "\u043d\u0438\u0448\u0442\u044f\u043a\u0438"], "title": "Moving Spring Boot microservices from Java 8 to Java 11: what can possibly go wrong?", "description": ["With the new release cycle, the Java platform presents us a new version every six months, but few people in the enterprise world actually switch to it. Java 11, however, became an exception \u2014 due to several factors many considered it a good version to move to. It would all be fine and dandy, but if you've got a Spring Boot microservices landscape, the process of the update can become a tiny bit more interesting than simply toggling versions.", "In this talk, we'll discuss not only and not so much new language features as general pitfalls of updating Boot microservices, from build (for example, with Gradle) to deployment of Docker containers (for example, in Kubernetes). We'll also talk about what we can expect from moving to Spring Boot 2.1 (which supports Java 11) and its colleagues bringing with them lots of new things and special effects.", "Spring Boot microservice apps developers and testers, who are currently moving or planning to move their products to Java 11, might find this talk interesting."], "speakers": [{"name": "Vladimir Plizga", "avatar": "//images.ctfassets.net/oxjq45e8ilak/1ixcJhbNXpTUXp5JUwLUBa/d49f6c40a4ea45e90a23287c1f97aa28/Plizga_JPoint_2019.jpg?w=300", "bio": "Since his school days Vladimir was enthusiastic about programming and from then on has managed to code everything: from Soviet programmable calculators to modern SCADA systems in production. For the last several years he has been involved in backend development of Internet banking and other follow-up services at CFT (Center of Financial Technologies), where he actively stands for microservices and other popular things. Constantly bothers with ideas about optimization of difficult development/server software testing tasks, nurtures solutions for them while jogging or swimming and then puts them into life, experimenting shamelessly on his colleagues.", "contactInfo": {"company": ["\u0421FT", "2019"], "twitterUsername": "https://twitter.com/toparvion"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/1kdtfe1zh0vtosdldezwap/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/5dc9qBMxfY57CziDAn3qFB/30bc43bfab51f09a940fc7c43f5512e3/Evgeny_Mandrikov_Marc_Hoffmann_Let_s_make_some_0xCAFEBABE_____test-driven_bytecode_engineering.pdf"}, {"video": "https://www.youtube.com/watch?v=4BgIZCC2GMM&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=34"}], "tags": ["fatherofjacoco", "bytecode", "tdd"], "title": "Let's make some 0xCAFEBABE \u2014 test-driven bytecode engineering", "description": ["Creating or manipulating Java bytecode can be tricky when working with low-level libraries like ASM. Writing and maintaining tools on bytecode level should therefore always be guided by comprehensive tests.", "In this session we will learn how bytecode manipulation can be implemented in a test-driven approach. With many code examples we will see practical techniques for real projects."], "speakers": [{"name": "Marc Hoffmann", "avatar": "//images.ctfassets.net/oxjq45e8ilak/7xHL8MbGYEOQuggu80QYWK/a0eda336d0a9636405f687e9b328d31d/marc_hoffmann_temp.jpg?w=300", "bio": "Marc is the initial author of the JaCoCo project. Working on bytecode analysis for over than 10 years he became almost a bytecode native speaker. He is a frequent speaker at various international conferences. For his contributions to Java community he became a Java Champion in 2014. In his day job at mtrail Marc works on Java-based solutions to control trains on European railroad networks.", "contactInfo": {"company": ["mtrail GmbH", "2019"], "twitterUsername": "https://twitter.com/marcandsweep"}}, {"name": "Evgeny Mandrikov", "avatar": "//images.ctfassets.net/oxjq45e8ilak/46YdAJuYPS20Gg0a2G02yo/51bcb52430554cee1e2e3a675965fc7d/Mandrikov.jpg?w=300", "bio": "Evgeny is a contributor to various open source projects and a speaker at international conferences and JUGs. He is one of the lead developers of JaCoCo project, and also the project lead of the award-winning EclEmma project at the Eclipse Foundation that integrates JaCoCo into Eclipse IDE. In his day job at SonarSource Evgeny develops SonarQube's static source code analysis for languages such as Java, C/C++, C#, JavaScript.", "contactInfo": {"company": ["SonarSource", "2019"], "twitterUsername": "https://twitter.com/_godin_"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/y6asxkk0vf5maxfsvkpzt/"}, {"presentation": "https://downloads.ctfassets.net/oxjq45e8ilak/5hx42GCwMtAHo5QPj2wRny/aab146a9deca96976618481c365ff9b7/Michal_Plachta_Fast__functional.pdf"}, {"video": "https://www.youtube.com/watch?v=C1QiYjAbrb0&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=28"}], "tags": ["performancetuning", "scala", "modularity", "functionalprogramming"], "title": "Fast & functional", "description": ["In this talk we are going to create a functional and blazingly fast microservice. We will use functional programming abstractions to quickly mix & match different HTTP libraries, state implementations and concurrency configurations. Each step will be followed by a performance analysis using different tools from JVM toolbox.", "This talk is for you if you want to see how type classes, cats IO monad, async-profiler, flame graphs and wrk are used together to create microseconds-fast Scala service for YouTube videos statistics."], "speakers": [{"name": "Micha\u0142 P\u0142achta", "avatar": "//images.ctfassets.net/oxjq45e8ilak/kHHa75mDmj3pSKoHiGHCJ/9cee45e27966f832652efb6ff147c2fe/P__achta.jpg?w=300", "bio": "Micha\u0142 is a software engineer developing software & collaborative working environments. He is currently using functional programming (Scala) and DevOps culture approach. He speaks at conferences, runs workshops & organises meetups to help others make better products. He currently works at Reality Games, where they are building games based on big data.", "contactInfo": {"company": ["Reality Games", "2019"], "twitterUsername": "https://twitter.com/miciek"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/1xa5ea6p9djq1phnauiygm/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/5C3BJ4jXm0xaI5Cz8ZN2ra/e3cceba5659722f6d94859f0e96356dc/Grigoriy_Koshelev_Kogda_vs_poshlo_po_Kafke.pdf"}, {"video": "https://www.youtube.com/watch?v=A_yUaPARv8U&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=38"}], "tags": ["\u0433\u0440\u0430\u0431\u043b\u0438", "devops"], "title": "When it all went to Kafka", "description": ["We'll dive deep into the architecture of Kafka components, discuss pitfalls carefully collected in this presentation and try to understand where different Kafka constraints came from. Expect fair play and no marketing. ", "Pitfalls covered in this talk can help you answer the following questions: "], "speakers": [{"name": "Gregory Koshelev\r", "avatar": "//images.ctfassets.net/oxjq45e8ilak/1ibXBUSPlsq6SA4oOcWQ0g/c4b58d7919ae8efd68a9257560db6db4/Koshelev.jpg?w=300", "bio": "Has more than 8 years of experience in commercial development on Java. Leads a small development team in Kontur, the biggest IT company in Ekaterinburg. Manages Java community inside of the company and in Ekaterinburg.", "contactInfo": {"company": ["Kontur", "2019"], "twitterUsername": "https://twitter.com/GregoryKoshelev"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/4ltyzdxqzmpeofbgkld7ns/"}, {"video": "https://www.youtube.com/watch?v=C5eD-K8AO3o&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=5"}], "tags": ["tipsandtricks", "hiddengems"], "title": "Atomic refactoring in IntelliJ IDEA: Bending IDE to our will", "description": ["Software programming includes changing not only functionality of the program, but also its structure, keeping the semantics intact; this process is usually called refactoring. There's always a risk of actually changing the semantics during refactoring if the developer makes a mistake in the process. Further testing isn't always able to detect this regression in time. Besides, the developers are often afraid of such regression and so avoid using refactoring even in cases when it can be really useful.", "But we can often divide the refactoring process into atomic steps, or transactions; after each step the semantics is saved. The smaller these steps, the shorter the \"broken\" condition of the program, the lesser is the possibility of an error. Sometimes the process can even be brought to perfection: each command you give to a development environment modifies the code, keeping the semantics intact. In this case the possibility of an error is practically reduced to zero.", "We'll see via examples how to achieve this during the Java code refactoring in IntelliJ IDEA and how to make your environment do atomic refactoring if it resists."], "speakers": [{"name": "Tagir Valeev", "avatar": "//images.ctfassets.net/oxjq45e8ilak/3gM8xfRRroiZ00qBy2zMeQ/4c21e49b06f0a379d140356851ac0f9a/Valeev.jpg?w=300", "bio": "Tagir Valeev is a software developer in JetBrains s.r.o. Currently, he improves the support of Java features in IntelliJ IDEA developing new inspections and intention actions. Tagir is actively interested in static code analysis and when time permits, develops an open source library called StreamEx which enhances standard Java 8 Stream API.", "contactInfo": {"company": ["JetBrains", "2019"], "twitterUsername": "https://twitter.com/tagir_valeev"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/7fyw10golijzms1eghmntp/"}, {"repo": "https://inponomarev.github.io/kstreams-examples/#/"}, {"video": "https://www.youtube.com/watch?v=uUZDfVTVGrE&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=27"}], "tags": ["\u043a\u043e\u043f\u0430\u0440\u0442\u0438\u0446\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435", "rocksdb"], "title": "Kafka Streams API: Moving beyond Hello World", "description": ["Kafka is gaining popularity as a streaming platform. If you were impressed by the overview talks and are going to create a working application using Kafka Streams, you'll need to learn quite a few things.", "Where to start? How to test? How does local state storage and replication work? What is RocksDB and what use it has under the hood of Kafka Streams? What do these scary words, \"re-partitioning\" and \"co-partitioning\", actually mean? We'll try to answer these questions, examining along the way several demo examples using Spring framework."], "speakers": [{"name": "Ivan Ponomarev", "avatar": "//images.ctfassets.net/oxjq45e8ilak/1nZqHhJYJ6NSkdk39DYZmN/0eed138448ecb4086ba36e374d6e0e98/Ponomarev.jpg?w=300", "bio": "Tech lead in KURS company, tutor at MIPT. Has more than 15 years of experience in IT. Writes code and manages projects ranging from ERP systems customization to building a real-time webscraping system. Sometimes shares his experience as a speaker at conferences and meetups.", "contactInfo": {"company": ["KURS", "2019"], "twitterUsername": "https://twitter.com/inponomarev"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/vrkxw9dm8sogyiyo8qask/"}, {"presentation": "https://downloads.ctfassets.net/oxjq45e8ilak/16SCJOjpcy5pNplY9L0Ajq/27c76289272388db156c9f04b488a1cd/Nikolay_Igotti_KotlinNative_zachem_nuzhen_yeshche_odin_kompiliruyemyy_yazyk_v_XXI_veke.pdf"}, {"video": "https://www.youtube.com/watch?v=81PxYsxYeJ4&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=26"}], "tags": ["multiplatform"], "title": "Kotlin/Native: why make a native language in 2019? What is beyond JVM?", "description": ["Nikolay will tell why they believe development of Kotlin/Native makes sense despite the wide variety of existing compiled languages.", "He will cover:"], "speakers": [{"name": "Nikolay Igotti", "avatar": "//images.ctfassets.net/oxjq45e8ilak/3moeDFS1BC7T1IyggrPW0T/f42be9d9564abd352082ef3e0be52b9b/Igotti.jpg?w=300", "bio": "Nikolay Igotti works as Team Lead on Kotlin/Native at JetBrains. Previously used to work at Sun Microsystems, EMC, Oracle, Google on various system level software, such as HotSpot Java Virtual Machine, VirtualBox hypervisor and Native/Client runtime.", "contactInfo": {"company": ["JetBrains", "2019"], "twitterUsername": null}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 3, "name": "Hardcore. Really hard and demanding talk, you'll understand only if you're an experienced engineer."}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/7jjesm28gvuujmgbmrwjty/"}, {"video": "https://www.youtube.com/watch?v=C5fATKdVxZ0&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=35"}], "tags": ["vm/runtime", "compilerconstruction"], "title": "Metacompilation, partial evaluation, the Futamura projections, and how GraalVM will save the world", "description": ["When you were a kid, didn't you want to write your own compiler, or game engine, or something like that? ", "In this session, we'll talk about Truffle \u2014 framework for creating programming languages on the basis of GraalVM. You only need to describe the language semantics in the form of interpreter, and presto, in a couple of minutes it'll warm up and start working with a tremendous speed. We'll explore how Truffle works, what is partial evaluation of programs. We'll see what other optimizations Truffle do for languages and why it works best with the Graal compiler. ", "It doesn't mean that every one of us has to write their own programming language or compiler, but the details of Truffle's work from this talk can help you better understand how languages supported by GraalVM \u2014 JavaScript, Ruby, R, Python \u2014 work and how they should be used."], "speakers": [{"name": "Oleg \u0160elajev", "avatar": "//images.ctfassets.net/oxjq45e8ilak/nOqNSu66FcGT0MwzHuWMe/38d4e7aae96ac8a7c1d4fb9353243215/Selajev.jpg?w=300", "bio": "Oleg \u0160elajev is a developer advocate for the GraalVM project at Oracle Labs, which aims to make programs run faster and developers more productive. He helps to organize VirtualJUG, the online Java User Group, and a GDG chapter in Tartu, Estonia. Became a Java Champion in 2017. Loves pizza and playing chess. Favorite languages: Java, JavaScript, and Clojure.", "contactInfo": {"company": ["Oracle", "2019"], "twitterUsername": "https://twitter.com/shelajev"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/7hdkasbciqgyumltlyoe6z/"}, {"video": "https://www.youtube.com/watch?v=0ljyia9PwDg&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=25"}], "tags": [], "title": "Kotlin: how do usual constructions work", "description": ["In this session, Pavel tells how usual constructions work in Kotlin. We'll decompile code and see how it works and what is the cost."], "speakers": [{"name": "Paul Finkelshteyn", "avatar": "//images.ctfassets.net/oxjq45e8ilak/3tc4SRjCW4UO4aWKICksQY/3a915483ee7253e01dccdf2c9f0a6cec/Finkelstein.jpg?w=300", "bio": "Former system administrator, master of psychology in business, loves to learn and discover. Also loves RPGs (Gloomhaven currently) and talk. To be honest, to talk may be his TOP-1 hobby.", "contactInfo": {"company": ["Lamoda", "2019"], "twitterUsername": "https://twitter.com/asm0di0"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/6g2qtnvk8tsmpmotqosgd8/"}, {"repo": "https://github.com/sdaschner/coffee/tree/jpoint-2019-istio/presentation"}, {"video": "https://www.youtube.com/watch?v=rxxpo4Ye2xQ&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=24"}], "tags": ["kubernetes", "cloudnative", "servicemesh"], "title": "Cloud native, service-meshed Java Enterprise with Istio", "description": ["In enterprise software, we see more and more of the cloud native technologies, especially container orchestration and service meshes, emerging and slowly taking over the market. Developers are facing the challenge which technology to choose to implement microservices for a cloud native setting. Java Enterprise has been used for software solutions for a long time and its APIs are well-established in the ecosystem. However, is it possible to develop cloud native, service-meshed Java Enterprise applications that fulfill concerns such as scalability, resiliency, and telemetry\u2009\u2014\u2009in an effective, manageable way?"], "speakers": [{"name": "Sebastian Daschner", "avatar": "//images.ctfassets.net/oxjq45e8ilak/6wRrAEdnpa8sraY3OQYzfu/9f2f8a025f32a9442d4c6424203ce447/Daschner.jpg?w=300", "bio": "Sebastian Daschner is a Lead Java Developer Advocate for IBM, author, and trainer and is enthusiastic about programming and Java (EE). He is the author of the book \"Architecting Modern Java EE Applications\". Sebastian is participating in the JCP, helping to form the future standards of Java EE, serving in the JAX-RS, JSON-P and Config Expert Groups and collaborating on various open source projects. For his contributions in the Java community and ecosystem, he was recognized as a Java Champion, Oracle Developer Champion and JavaOne Rockstar.", "contactInfo": {"company": ["IBM", "2019"], "twitterUsername": "https://twitter.com/DaschnerS"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/7gcedvddxsm9p6k4ywwny1/"}, {"video": "https://www.youtube.com/watch?v=7RO_YZrx_c4&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=10"}], "tags": ["bestpractices", "var"], "title": "Local variable type inference: Friend or foe?", "description": ["Local variable type inference was introduced as a new Java language feature in Java SE 10. Gone are the days of explicitly having to define the type of a variable; let the compiler do it for you with the magic of var!", "At first sight, this looks like a small change that will eliminate unnecessary boilerplate code and reduce how much typing (on the keyboard) is required to maintain strong typing (of the language). However, as with many features, there are some unexpected nuances as well as both good and bad use cases.", "In this session, we'll explain the fundamentals of local variable type inference. We'll then take a series of examples of the use of var and discuss the technical merits of each case."], "speakers": [{"name": "Simon Ritter", "avatar": "//images.ctfassets.net/oxjq45e8ilak/4BEQmsXal7tBTgb3tj4PvN/e0fabff253d70b9b24f53f550ab42671/Ritter.jpg?w=300", "bio": "Simon Ritter is the Deputy CTO of Azul Systems. He has been in the IT business since 1984 and holds a Bachelor of Science degree in Physics from Brunel University in the U.K. ", "contactInfo": {"company": ["Azul Systems", "2019"], "twitterUsername": "https://twitter.com/speakjava"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/2o8scc5jbaurnqqlsydzxv/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/31M22UW3WK01Pu8KnzAzBy/59b3bfe4f8e2c6a4346f6b182f028d6f/Andrey_Pangin_JVM_TI_kak_sdelat_plagin_dlya_virtualnoy_mashiny.pdf"}, {"video": "https://www.youtube.com/watch?v=aiuKiE5-0g4&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=40"}], "tags": ["asyncprofiler", "jvmtitools"], "title": "JVM TI: how to create a \"plugin\" for a virtual machine", "description": ["JVM Tool Interface is a conventional API to develop all sorts of tools: profilers, debuggers, or diagnostic utilities. In fact, it's the only legal way to access JVM, be it HotSpot or any other virtual machine.", "It turns out that JVM TI can be used not only for creating agents. In this talk, we'll discuss in which cases JVM TI can help developers, including common Java applications. We'll learn about the capabilities of the interface, including new features from Java 9 and 11, and create our own tool.", "Though powerful, JVM TI still has its flaws. In the first place, it requires writing C/C++ code. But besides that, it has lots of sophisticated elements and even JVM bugs associated with itself. Using the real-life cases as an example, we'll see what JVM TI issues developers encounter and how to solve these issues."], "speakers": [{"name": "Andrei Pangin", "avatar": "//images.ctfassets.net/oxjq45e8ilak/Sj5vOkH7UGq8gqm48wOkq/8d2f031c14b53dabc2df3f6e5aec7c33/Pangin.jpg?w=300", "bio": "Leading software engineer at Odnoklassniki, specializes in the development of high-loaded Java servers. Due to the experience he got while working at Oracle in HotSpot team, knows JVM like the back of his hand and is fond of sharing his expertise during various conferences. Authors one-nio and async-profiler projects, leads in the #JVM category on Stack Overflow.", "contactInfo": {"company": ["Odnoklassniki", "2019"], "twitterUsername": "https://twitter.com/AndreiPangin"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 1, "name": "Introduction to technology"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/7xq89ctxcqyewobsydfnk5/"}, {"video": "https://www.youtube.com/watch?v=e9jy-PkxMA0&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=4"}], "tags": [], "title": "Playing God: Has science crossed a line?", "description": ["Eliminating genetic defects and improving human capabilities. Saving endangered species and reviving extinct ones. Changing genetic code and DNA alphabet. Genetic engineering of populations and mutagenic chain reactions. Synthetic chromosomes and eliminating genetic trash. Human cloning and children with three parents. Are we going to play God like this or is it time to outplay him?"], "speakers": [{"name": "Alexander Panchin", "avatar": "//images.ctfassets.net/oxjq45e8ilak/ukvr9Y85z2csDJFvfiGJj/08cf940075d5f333048fd94475063358/Panchin.jpg?w=300", "bio": "Alexander graduated at the Department of Bioengineering and Bioinformatics, Moscow State University (PhD in Computational biology). Currently he's involved and interested in the topics of human metagenome research, phylogenetic analysis and evolutionary biology.", "contactInfo": {"company": [null, "2019"], "twitterUsername": "https://twitter.com/Scinquisitor"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/35watcftbrvf8a6xrqeykj/"}, {"presentation": "https://downloads.ctfassets.net/oxjq45e8ilak/7frKPLnqmYownvOw4i8SBe/e8a6807ff431812953046e7723c54970/Chris_Hegarty_Java_11_reactive_HTTP_Client.pdf"}, {"video": "https://www.youtube.com/watch?v=M8NQKsk9w-Q&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=23"}], "tags": ["reactive", "corelibraries"], "title": "Java 11 reactive HTTP Client", "description": ["The new HTTP Client API, incubated in JDK 9, re-incubated in JDK 10, has been standardized in Java SE 11.", "This session will first provide the background to the API, its history and evolution through JDK 9 and JDK 10, then moving on to the specifics of what has been standardized in Java SE 11. This session will inform the audience how to use the API to perform common tasks like issuing an HTTP request and receiving the response asynchronously, how to chain asynchronous tasks dependent on the response, and how the API leverages Reactive Streams and can interoperate with various RS implementations."], "speakers": [{"name": "Chris Hegarty", "avatar": "//images.ctfassets.net/oxjq45e8ilak/1i6zZIEZ54b8RXqDBLyPvX/5ec88cb0fce710d6c9a93e916e97bb8c/Chris_Hegarty.jpg?w=300", "bio": "Chris Hegarty is Networking Lead of the Java Platform Group at Oracle. His contributions to the platform include the Java 11 HTTP Client, the Stream Control Transport Protocol API, Windows Dual TCP/IP Stack support, and countless other enhancements in the core libraries. Chris was a key contributor on Project Jigsaw, including Incubator Modules and Encapsulating JDK Internals. He has worked on Java platforms since 2000, and currently leads the Networking group.", "contactInfo": {"company": ["Oracle", "2019"], "twitterUsername": "https://twitter.com/chegar999"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "EN", "source": [{"article": "https://2019.jpoint.ru/en/talks/6og2mqhxtbc8qbpw3gyqvo/"}, {"video": "https://www.youtube.com/watch?v=0YeZVUoNJck&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=9"}], "tags": ["lessworkfasterbuild", "fromtheteam"], "title": "Improve Java build performance with Gradle 5", "description": ["As your project grows larger and more complex, its build will become slower if left unchecked. Having fast and reliable builds has a major influence on developer productivity. Faster builds make feedback cycles shorter by reducing wait times and context switches for developers. Recent Gradle releases give you new capabilities to greatly improve the speed of your Java project build.", "In this session, we will discuss and use real builds to demo how you can:"], "speakers": [{"name": "Ren\u00e9 Gr\u00f6schke", "avatar": "//images.ctfassets.net/oxjq45e8ilak/6vblvaogLxOfuUn9d9bstD/1aba426942756652cfd13b93a7617934/Groeschke.jpg?w=300", "bio": "Apart from working on the Gradle core, Ren\u00e9 supports teams all over the world to deliver better software faster by giving in-depth Gradle classes and providing remote and onsite support on implementing software automation, continuous delivery and continuous integration patterns.", "contactInfo": {"company": ["Gradle Inc.", "2019"], "twitterUsername": "https://twitter.com/breskeby"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/b9ib3swihayyhnnpjghc2/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/XWDluqycUS99kzXnwc3dW/0a33d09661635498c8b2acae7a4282cd/Kirill_Tolkachev_Evgeny_Borisov_Spring__Reactive_or_not_Reactive.pdf"}, {"video": "https://www.youtube.com/watch?v=mX19FWX2_Hs&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=3"}], "tags": ["spring5", "rsocket", "webflux", "livecoding"], "title": "Reactive, or not reactive: that is the question", "description": ["We all know the saying: \"If all you have is hammer, everything looks like a nail\". In the world of software engineering it usually happens to the new, hyped technologies, which are not always used as they should be. As a result, we get more complex API which can only be supported by the engineers that went through fire and water, lots of bugs, and other problems.", "How can we avoid broken fingers and things destroyed by hammer when we try to implement React?", "As an example we'll discuss a system with problems and, naturally, try to refactor it in reactive manner. We'll cover benefits and drawbacks of not only the approach, but also API of specific implementations. We'll evaluate the level of complexity before and after refactoring. We'll try to learn what is joke and what isn't."], "speakers": [{"name": "Kirill Tolkachev", "avatar": "//images.ctfassets.net/oxjq45e8ilak/5krLlJXpKw4MSYiaW0iY8k/54d35328070655af06afe28160384e9b/Tolkachev.jpg?w=300", "bio": "Up until recently Kirill was a lead developer at Alfa-Lab. He was developing different banking APIs, forming principles and tools related to microservice architecture. He is a fan of Groovy, Gradle, Spring and Netflix technologies stack. Kirill is a resident of famous Russian IT-podcast \"Razbor Poletov\". He knows DevOps methodology like the palm of his hand and has four years' experience of its production usage.", "contactInfo": {"company": ["CIAN", "2019"], "twitterUsername": "https://twitter.com/tolkv"}}, {"name": "Evgeny Borisov", "avatar": "//images.ctfassets.net/oxjq45e8ilak/jwKvsDAhAkaMIiueikasI/291331aeeb36c14b29e08cf16c6dfbf2/Borisov__1_.png?w=300", "bio": "Evgeny is developing on Java since 2001 and took part in a large number of enterprise projects. He went all the way from a simple programmer to an architect, got tired of the routine and became a free artist. Currently, Eugene writes and conducts courses, seminars and workshops for different audiences: live-courses on J2EE for Israeli army officers, Spring \u2014 for WebEx for Romanians, Hibernate through GoToMeeting for Canadians, Troubleshooting and Design Patterns for Ukrainians.", "contactInfo": {"company": ["Naya Technologies", "2019"], "twitterUsername": "https://twitter.com/jekaborisov"}}]}},
{"name": "Jpoint", "year": "2019", "location": "Moscow", "url": "https://2019.jpoint.ru/en/", "logo": "", "report": {"complexity": {"value": 2, "name": "For practicing engineers"}, "language": "RU", "source": [{"article": "https://2019.jpoint.ru/en/talks/2r0qpl14l6way6guqz5ujq/"}, {"presentation": "https://assets.ctfassets.net/oxjq45e8ilak/1hKCdqLrKIYYZKVSWFYGLA/cea11d94292dcda6e28eaa746a23ea35/Yuriy_Artamonov_Anatomiya_i_fiziologiya_Vaadin_Flow.pdf"}, {"video": "https://www.youtube.com/watch?v=I-T4dESU-MY&list=PLVe-2wcL84b94ehIDEskAMbQKDzt5JZNS&index=22"}], "tags": ["ui", "thinclient", "serverside", "vaadin", "\u0431\u043e\u043b\u044c"], "title": "Anatomy and physiology of Vaadin Flow", "description": ["Vaadin is quite widely known in Java as a framework for UI development. Some time ago, a revolutionary version of Vaadin 10 was released, in which developers completely changed the technological stack, rethought the API, and attempted to make the UI Java framework truly simple. It leverages a new UI state synchronization mechanism, which can be used with other front-end frameworks.", "Now Vaadin Flow can be considered ready for production and we will find out whether Java UI can be done quickly and conveniently, and also try to understand for which applications this technology is suitable, and for which it is better to avoid it. The purpose of this talk is a thorough analysis of the internals of the framework and the search for pitfalls, it is designed to help you form your opinion on technology without marketing."], "speakers": [{"name": "Yuriy Artamonov", "avatar": "//images.ctfassets.net/oxjq45e8ilak/4zhO2pfs2RNTZxm170Ca03/58bb4c0593e91d5a823b9579f6fa1afd/Artamonov.jpg?w=300", "bio": "Yuriy is playing an integral role in the CUBA Platform development team and contributing a lot to the platform architecture design, specializing in front-end technologies. For better or for worse, he had to sort out Vaadin Framework in detail and even become its contributor and co-author of several popular addons. Yuriy is a brave tamer of a fork of Vaadin with 8 years of experience.", "contactInfo": {"company": ["Haulmont", "2019"], "twitterUsername": "https://twitter.com/Yuriy_Artamonov"}}]}}
]